{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AchievementBadge=_ref=>{let{type,level,title,description,isUnlocked,progress=0,maxProgress=100,size='md',showProgress=true,className=''}=_ref;const getBadgeData=()=>{const badgeMap={streak:{emoji:'üî•',color:'text-cartoon-orange',bgColor:'bg-gradient-to-br from-cartoon-orange to-cartoon-red'},points:{emoji:'‚≠ê',color:'text-cartoon-yellow',bgColor:'bg-gradient-to-br from-cartoon-yellow to-cartoon-orange'},tasks:{emoji:'‚úÖ',color:'text-cartoon-green',bgColor:'bg-gradient-to-br from-cartoon-green to-success-400'},category:{emoji:'üéØ',color:'text-cartoon-purple',bgColor:'bg-gradient-to-br from-cartoon-purple to-primary-400'},special:{emoji:'üèÜ',color:'text-cartoon-pink',bgColor:'bg-gradient-to-br from-cartoon-pink to-cartoon-purple'}};return badgeMap[type];};const getSizeClasses=()=>{const sizeMap={sm:'w-16 h-16 text-2xl',md:'w-20 h-20 text-3xl',lg:'w-24 h-24 text-4xl'};return sizeMap[size];};const getLevelStars=()=>{const stars=[];for(let i=0;i<level;i++){stars.push(/*#__PURE__*/_jsx(\"span\",{className:\"text-cartoon-yellow animate-sparkle\",style:{animationDelay:`${i*0.2}s`},children:\"\\u2B50\"},i));}return stars;};const progressPercentage=Math.min(progress/maxProgress*100,100);const badgeData=getBadgeData();return/*#__PURE__*/_jsxs(\"div\",{className:`relative ${className}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:`\n          ${getSizeClasses()}\n          ${badgeData.bgColor}\n          rounded-cartoon-lg\n          flex items-center justify-center\n          shadow-cartoon-lg\n          transition-all duration-300\n          relative\n          ${isUnlocked?'animate-float hover:animate-celebrate cursor-pointer':'grayscale opacity-50'}\n        `,children:[/*#__PURE__*/_jsx(\"span\",{className:`${badgeData.color} ${isUnlocked?'animate-sparkle':''}`,children:badgeData.emoji}),!isUnlocked&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 bg-black/30 rounded-cartoon-lg flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-white text-xl\",children:\"\\uD83D\\uDD12\"})}),level>1&&isUnlocked&&/*#__PURE__*/_jsxs(\"div\",{className:\"absolute -top-2 -right-2 bg-cartoon-purple text-white text-xs font-bold px-2 py-1 rounded-full\",children:[\"Lv.\",level]}),isUnlocked&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent transform -skew-x-12 animate-pulse\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 text-center\",children:[/*#__PURE__*/_jsx(\"h4\",{className:`font-bold ${isUnlocked?'text-gray-900':'text-gray-500'}`,children:title}),/*#__PURE__*/_jsx(\"p\",{className:`text-xs ${isUnlocked?'text-gray-600':'text-gray-400'}`,children:description})]}),level>0&&isUnlocked&&/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center mt-1 space-x-1\",children:getLevelStars()}),!isUnlocked&&showProgress&&maxProgress>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-cartoon-green h-2 rounded-full transition-all duration-300\",style:{width:`${progressPercentage}%`}})}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-500 text-center mt-1\",children:[progress,\"/\",maxProgress]})]}),isUnlocked&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute -top-3 -left-3 w-2 h-2 bg-cartoon-yellow rounded-full animate-sparkle\"}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute -top-3 -right-3 w-2 h-2 bg-cartoon-pink rounded-full animate-sparkle\",style:{animationDelay:'0.3s'}}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute -bottom-3 -left-3 w-2 h-2 bg-cartoon-blue rounded-full animate-sparkle\",style:{animationDelay:'0.6s'}}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute -bottom-3 -right-3 w-2 h-2 bg-cartoon-green rounded-full animate-sparkle\",style:{animationDelay:'0.9s'}})]})]});};export default AchievementBadge;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AchievementBadge","_ref","type","level","title","description","isUnlocked","progress","maxProgress","size","showProgress","className","getBadgeData","badgeMap","streak","emoji","color","bgColor","points","tasks","category","special","getSizeClasses","sizeMap","sm","md","lg","getLevelStars","stars","i","push","style","animationDelay","children","progressPercentage","Math","min","badgeData","width"],"sources":["/root/projects/SummerVacationPlanning/frontend/src/components/AchievementBadge.tsx"],"sourcesContent":["import React from 'react';\n\ninterface AchievementBadgeProps {\n  type: 'streak' | 'points' | 'tasks' | 'category' | 'special';\n  level: number;\n  title: string;\n  description: string;\n  isUnlocked: boolean;\n  progress?: number;\n  maxProgress?: number;\n  size?: 'sm' | 'md' | 'lg';\n  showProgress?: boolean;\n  className?: string;\n}\n\nconst AchievementBadge: React.FC<AchievementBadgeProps> = ({\n  type,\n  level,\n  title,\n  description,\n  isUnlocked,\n  progress = 0,\n  maxProgress = 100,\n  size = 'md',\n  showProgress = true,\n  className = '',\n}) => {\n  const getBadgeData = () => {\n    const badgeMap: { [key: string]: { emoji: string; color: string; bgColor: string } } = {\n      streak: { emoji: 'üî•', color: 'text-cartoon-orange', bgColor: 'bg-gradient-to-br from-cartoon-orange to-cartoon-red' },\n      points: { emoji: '‚≠ê', color: 'text-cartoon-yellow', bgColor: 'bg-gradient-to-br from-cartoon-yellow to-cartoon-orange' },\n      tasks: { emoji: '‚úÖ', color: 'text-cartoon-green', bgColor: 'bg-gradient-to-br from-cartoon-green to-success-400' },\n      category: { emoji: 'üéØ', color: 'text-cartoon-purple', bgColor: 'bg-gradient-to-br from-cartoon-purple to-primary-400' },\n      special: { emoji: 'üèÜ', color: 'text-cartoon-pink', bgColor: 'bg-gradient-to-br from-cartoon-pink to-cartoon-purple' },\n    };\n    return badgeMap[type];\n  };\n\n  const getSizeClasses = () => {\n    const sizeMap = {\n      sm: 'w-16 h-16 text-2xl',\n      md: 'w-20 h-20 text-3xl',\n      lg: 'w-24 h-24 text-4xl',\n    };\n    return sizeMap[size];\n  };\n\n  const getLevelStars = () => {\n    const stars = [];\n    for (let i = 0; i < level; i++) {\n      stars.push(\n        <span\n          key={i}\n          className=\"text-cartoon-yellow animate-sparkle\"\n          style={{ animationDelay: `${i * 0.2}s` }}\n        >\n          ‚≠ê\n        </span>\n      );\n    }\n    return stars;\n  };\n\n  const progressPercentage = Math.min((progress / maxProgress) * 100, 100);\n  const badgeData = getBadgeData();\n\n  return (\n    <div className={`relative ${className}`}>\n      {/* Badge container */}\n      <div\n        className={`\n          ${getSizeClasses()}\n          ${badgeData.bgColor}\n          rounded-cartoon-lg\n          flex items-center justify-center\n          shadow-cartoon-lg\n          transition-all duration-300\n          relative\n          ${isUnlocked \n            ? 'animate-float hover:animate-celebrate cursor-pointer' \n            : 'grayscale opacity-50'\n          }\n        `}\n      >\n        {/* Badge emoji */}\n        <span className={`${badgeData.color} ${isUnlocked ? 'animate-sparkle' : ''}`}>\n          {badgeData.emoji}\n        </span>\n\n        {/* Lock overlay for locked badges */}\n        {!isUnlocked && (\n          <div className=\"absolute inset-0 bg-black/30 rounded-cartoon-lg flex items-center justify-center\">\n            <span className=\"text-white text-xl\">üîí</span>\n          </div>\n        )}\n\n        {/* Level indicator */}\n        {level > 1 && isUnlocked && (\n          <div className=\"absolute -top-2 -right-2 bg-cartoon-purple text-white text-xs font-bold px-2 py-1 rounded-full\">\n            Lv.{level}\n          </div>\n        )}\n\n        {/* Glow effect for unlocked badges */}\n        {isUnlocked && (\n          <div className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent transform -skew-x-12 animate-pulse\" />\n        )}\n      </div>\n\n      {/* Badge title */}\n      <div className=\"mt-2 text-center\">\n        <h4 className={`font-bold ${isUnlocked ? 'text-gray-900' : 'text-gray-500'}`}>\n          {title}\n        </h4>\n        <p className={`text-xs ${isUnlocked ? 'text-gray-600' : 'text-gray-400'}`}>\n          {description}\n        </p>\n      </div>\n\n      {/* Level stars */}\n      {level > 0 && isUnlocked && (\n        <div className=\"flex justify-center mt-1 space-x-1\">\n          {getLevelStars()}\n        </div>\n      )}\n\n      {/* Progress bar for locked badges */}\n      {!isUnlocked && showProgress && maxProgress > 0 && (\n        <div className=\"mt-2\">\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div\n              className=\"bg-cartoon-green h-2 rounded-full transition-all duration-300\"\n              style={{ width: `${progressPercentage}%` }}\n            />\n          </div>\n          <p className=\"text-xs text-gray-500 text-center mt-1\">\n            {progress}/{maxProgress}\n          </p>\n        </div>\n      )}\n\n      {/* Celebration sparkles for newly unlocked badges */}\n      {isUnlocked && (\n        <>\n          <div className=\"absolute -top-3 -left-3 w-2 h-2 bg-cartoon-yellow rounded-full animate-sparkle\" />\n          <div className=\"absolute -top-3 -right-3 w-2 h-2 bg-cartoon-pink rounded-full animate-sparkle\" style={{ animationDelay: '0.3s' }} />\n          <div className=\"absolute -bottom-3 -left-3 w-2 h-2 bg-cartoon-blue rounded-full animate-sparkle\" style={{ animationDelay: '0.6s' }} />\n          <div className=\"absolute -bottom-3 -right-3 w-2 h-2 bg-cartoon-green rounded-full animate-sparkle\" style={{ animationDelay: '0.9s' }} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default AchievementBadge;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}