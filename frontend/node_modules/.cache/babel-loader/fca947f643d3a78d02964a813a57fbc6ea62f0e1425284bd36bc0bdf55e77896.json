{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{authService}from'../services/auth';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const unsubscribe=authService.onAuthStateChanged(async firebaseUser=>{if(firebaseUser){try{const userProfile=await authService.getProfile();setUser(userProfile);}catch(error){console.error('Error getting user profile:',error);setUser(null);}}else{setUser(null);}setLoading(false);});return unsubscribe;},[]);const login=async(email,password)=>{try{const userProfile=await authService.login(email,password);setUser(userProfile);}catch(error){throw error;}};const register=async(email,password,displayName,role,parentEmail)=>{try{const userProfile=await authService.register(email,password,displayName,role,parentEmail);setUser(userProfile);}catch(error){throw error;}};const logout=async()=>{try{await authService.logout();setUser(null);}catch(error){throw error;}};const updateProfile=async(displayName,avatar)=>{try{const updatedUser=await authService.updateProfile(displayName,avatar);setUser(updatedUser);}catch(error){throw error;}};const value={user,loading,login,register,logout,updateProfile};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","authService","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","unsubscribe","onAuthStateChanged","firebaseUser","userProfile","getProfile","error","console","login","email","password","register","displayName","role","parentEmail","logout","updateProfile","avatar","updatedUser","value","Provider"],"sources":["/root/projects/SummerVacationPlanning/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { User as FirebaseUser } from 'firebase/auth';\nimport { User, AuthContextType } from '../types';\nimport { authService } from '../services/auth';\n\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = authService.onAuthStateChanged(async (firebaseUser: FirebaseUser | null) => {\n      if (firebaseUser) {\n        try {\n          const userProfile = await authService.getProfile();\n          setUser(userProfile);\n        } catch (error) {\n          console.error('Error getting user profile:', error);\n          setUser(null);\n        }\n      } else {\n        setUser(null);\n      }\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const userProfile = await authService.login(email, password);\n      setUser(userProfile);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const register = async (\n    email: string,\n    password: string,\n    displayName: string,\n    role: 'student' | 'parent',\n    parentEmail?: string\n  ) => {\n    try {\n      const userProfile = await authService.register(email, password, displayName, role, parentEmail);\n      setUser(userProfile);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authService.logout();\n      setUser(null);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const updateProfile = async (displayName?: string, avatar?: string) => {\n    try {\n      const updatedUser = await authService.updateProfile(displayName, avatar);\n      setUser(updatedUser);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}