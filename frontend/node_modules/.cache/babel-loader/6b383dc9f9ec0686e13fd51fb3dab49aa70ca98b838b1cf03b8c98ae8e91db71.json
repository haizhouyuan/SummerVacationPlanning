{"ast":null,"code":"import{auth}from'../config/firebase';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';class ApiService{async getAuthToken(){const user=auth.currentUser;if(user){return await user.getIdToken();}return null;}async request(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const token=await this.getAuthToken();const config={headers:{'Content-Type':'application/json',...(token&&{Authorization:`Bearer ${token}`}),...options.headers},...options};const response=await fetch(`${API_BASE_URL}${endpoint}`,config);if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.error||`HTTP ${response.status}`);}return response.json();}// Task management\nasync getTasks(filters){const queryParams=new URLSearchParams(filters).toString();return this.request(`/tasks${queryParams?`?${queryParams}`:''}`);}async getTaskById(taskId){return this.request(`/tasks/${taskId}`);}async createTask(taskData){return this.request('/tasks',{method:'POST',body:JSON.stringify(taskData)});}async updateTask(taskId,updates){return this.request(`/tasks/${taskId}`,{method:'PUT',body:JSON.stringify(updates)});}async deleteTask(taskId){return this.request(`/tasks/${taskId}`,{method:'DELETE'});}// Daily tasks\nasync getDailyTasks(filters){const queryParams=new URLSearchParams(filters).toString();return this.request(`/daily-tasks${queryParams?`?${queryParams}`:''}`);}async createDailyTask(dailyTaskData){return this.request('/daily-tasks',{method:'POST',body:JSON.stringify(dailyTaskData)});}async updateDailyTaskStatus(dailyTaskId,updates){return this.request(`/daily-tasks/${dailyTaskId}`,{method:'PUT',body:JSON.stringify(updates)});}async deleteDailyTask(dailyTaskId){return this.request(`/daily-tasks/${dailyTaskId}`,{method:'DELETE'});}async getWeeklyStats(filters){const queryParams=new URLSearchParams(filters).toString();return this.request(`/daily-tasks/stats/weekly${queryParams?`?${queryParams}`:''}`);}// Rewards and gaming time\nasync calculateGameTime(data){return this.request('/rewards/game-time/calculate',{method:'POST',body:JSON.stringify(data)});}async getTodayGameTime(filters){const queryParams=new URLSearchParams(filters).toString();return this.request(`/rewards/game-time/today${queryParams?`?${queryParams}`:''}`);}async useGameTime(data){return this.request('/rewards/game-time/use',{method:'POST',body:JSON.stringify(data)});}async getSpecialRewards(){return this.request('/rewards/special');}// Redemptions\nasync getRedemptions(filters){const queryParams=new URLSearchParams(filters).toString();return this.request(`/redemptions${queryParams?`?${queryParams}`:''}`);}async createRedemption(redemptionData){return this.request('/redemptions',{method:'POST',body:JSON.stringify(redemptionData)});}async updateRedemptionStatus(redemptionId,updates){return this.request(`/redemptions/${redemptionId}`,{method:'PUT',body:JSON.stringify(updates)});}async getRedemptionStats(filters){const queryParams=new URLSearchParams(filters).toString();return this.request(`/redemptions/stats${queryParams?`?${queryParams}`:''}`);}}export const apiService=new ApiService();","map":{"version":3,"names":["auth","API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","getAuthToken","user","currentUser","getIdToken","request","endpoint","options","arguments","length","undefined","token","config","headers","Authorization","response","fetch","ok","errorData","json","catch","Error","error","status","getTasks","filters","queryParams","URLSearchParams","toString","getTaskById","taskId","createTask","taskData","method","body","JSON","stringify","updateTask","updates","deleteTask","getDailyTasks","createDailyTask","dailyTaskData","updateDailyTaskStatus","dailyTaskId","deleteDailyTask","getWeeklyStats","calculateGameTime","data","getTodayGameTime","useGameTime","getSpecialRewards","getRedemptions","createRedemption","redemptionData","updateRedemptionStatus","redemptionId","getRedemptionStats","apiService"],"sources":["/root/projects/SummerVacationPlanning/frontend/src/services/api.ts"],"sourcesContent":["import { auth } from '../config/firebase';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nclass ApiService {\n  private async getAuthToken(): Promise<string | null> {\n    const user = auth.currentUser;\n    if (user) {\n      return await user.getIdToken();\n    }\n    return null;\n  }\n\n  private async request<T>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<T> {\n    const token = await this.getAuthToken();\n    \n    const config: RequestInit = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...(token && { Authorization: `Bearer ${token}` }),\n        ...options.headers,\n      },\n      ...options,\n    };\n\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, config);\n    \n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.error || `HTTP ${response.status}`);\n    }\n\n    return response.json();\n  }\n\n  // Task management\n  async getTasks(filters?: any) {\n    const queryParams = new URLSearchParams(filters).toString();\n    return this.request(`/tasks${queryParams ? `?${queryParams}` : ''}`);\n  }\n\n  async getTaskById(taskId: string) {\n    return this.request(`/tasks/${taskId}`);\n  }\n\n  async createTask(taskData: any) {\n    return this.request('/tasks', {\n      method: 'POST',\n      body: JSON.stringify(taskData),\n    });\n  }\n\n  async updateTask(taskId: string, updates: any) {\n    return this.request(`/tasks/${taskId}`, {\n      method: 'PUT',\n      body: JSON.stringify(updates),\n    });\n  }\n\n  async deleteTask(taskId: string) {\n    return this.request(`/tasks/${taskId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Daily tasks\n  async getDailyTasks(filters?: any) {\n    const queryParams = new URLSearchParams(filters).toString();\n    return this.request(`/daily-tasks${queryParams ? `?${queryParams}` : ''}`);\n  }\n\n  async createDailyTask(dailyTaskData: any) {\n    return this.request('/daily-tasks', {\n      method: 'POST',\n      body: JSON.stringify(dailyTaskData),\n    });\n  }\n\n  async updateDailyTaskStatus(dailyTaskId: string, updates: any) {\n    return this.request(`/daily-tasks/${dailyTaskId}`, {\n      method: 'PUT',\n      body: JSON.stringify(updates),\n    });\n  }\n\n  async deleteDailyTask(dailyTaskId: string) {\n    return this.request(`/daily-tasks/${dailyTaskId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async getWeeklyStats(filters?: any) {\n    const queryParams = new URLSearchParams(filters).toString();\n    return this.request(`/daily-tasks/stats/weekly${queryParams ? `?${queryParams}` : ''}`);\n  }\n\n  // Rewards and gaming time\n  async calculateGameTime(data: any) {\n    return this.request('/rewards/game-time/calculate', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async getTodayGameTime(filters?: any) {\n    const queryParams = new URLSearchParams(filters).toString();\n    return this.request(`/rewards/game-time/today${queryParams ? `?${queryParams}` : ''}`);\n  }\n\n  async useGameTime(data: any) {\n    return this.request('/rewards/game-time/use', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async getSpecialRewards() {\n    return this.request('/rewards/special');\n  }\n\n  // Redemptions\n  async getRedemptions(filters?: any) {\n    const queryParams = new URLSearchParams(filters).toString();\n    return this.request(`/redemptions${queryParams ? `?${queryParams}` : ''}`);\n  }\n\n  async createRedemption(redemptionData: any) {\n    return this.request('/redemptions', {\n      method: 'POST',\n      body: JSON.stringify(redemptionData),\n    });\n  }\n\n  async updateRedemptionStatus(redemptionId: string, updates: any) {\n    return this.request(`/redemptions/${redemptionId}`, {\n      method: 'PUT',\n      body: JSON.stringify(updates),\n    });\n  }\n\n  async getRedemptionStats(filters?: any) {\n    const queryParams = new URLSearchParams(filters).toString();\n    return this.request(`/redemptions/stats${queryParams ? `?${queryParams}` : ''}`);\n  }\n}\n\nexport const apiService = new ApiService();"],"mappings":"AAAA,OAASA,IAAI,KAAQ,oBAAoB,CAEzC,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,2BAA2B,CAEjF,KAAM,CAAAC,UAAW,CACf,KAAc,CAAAC,YAAYA,CAAA,CAA2B,CACnD,KAAM,CAAAC,IAAI,CAAGP,IAAI,CAACQ,WAAW,CAC7B,GAAID,IAAI,CAAE,CACR,MAAO,MAAM,CAAAA,IAAI,CAACE,UAAU,CAAC,CAAC,CAChC,CACA,MAAO,KAAI,CACb,CAEA,KAAc,CAAAC,OAAOA,CACnBC,QAAgB,CAEJ,IADZ,CAAAC,OAAoB,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAEzB,KAAM,CAAAG,KAAK,CAAG,KAAM,KAAI,CAACV,YAAY,CAAC,CAAC,CAEvC,KAAM,CAAAW,MAAmB,CAAG,CAC1BC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,IAAIF,KAAK,EAAI,CAAEG,aAAa,CAAE,UAAUH,KAAK,EAAG,CAAC,CAAC,CAClD,GAAGJ,OAAO,CAACM,OACb,CAAC,CACD,GAAGN,OACL,CAAC,CAED,KAAM,CAAAQ,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGpB,YAAY,GAAGU,QAAQ,EAAE,CAAEM,MAAM,CAAC,CAElE,GAAI,CAACG,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,KAAO,CAAC,CAAC,CAAC,CAAC,CACzD,KAAM,IAAI,CAAAC,KAAK,CAACH,SAAS,CAACI,KAAK,EAAI,QAAQP,QAAQ,CAACQ,MAAM,EAAE,CAAC,CAC/D,CAEA,MAAO,CAAAR,QAAQ,CAACI,IAAI,CAAC,CAAC,CACxB,CAEA;AACA,KAAM,CAAAK,QAAQA,CAACC,OAAa,CAAE,CAC5B,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAC,eAAe,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC,CAC3D,MAAO,KAAI,CAACvB,OAAO,CAAC,SAASqB,WAAW,CAAG,IAAIA,WAAW,EAAE,CAAG,EAAE,EAAE,CAAC,CACtE,CAEA,KAAM,CAAAG,WAAWA,CAACC,MAAc,CAAE,CAChC,MAAO,KAAI,CAACzB,OAAO,CAAC,UAAUyB,MAAM,EAAE,CAAC,CACzC,CAEA,KAAM,CAAAC,UAAUA,CAACC,QAAa,CAAE,CAC9B,MAAO,KAAI,CAAC3B,OAAO,CAAC,QAAQ,CAAE,CAC5B4B,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAC/B,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAK,UAAUA,CAACP,MAAc,CAAEQ,OAAY,CAAE,CAC7C,MAAO,KAAI,CAACjC,OAAO,CAAC,UAAUyB,MAAM,EAAE,CAAE,CACtCG,MAAM,CAAE,KAAK,CACbC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACE,OAAO,CAC9B,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAC,UAAUA,CAACT,MAAc,CAAE,CAC/B,MAAO,KAAI,CAACzB,OAAO,CAAC,UAAUyB,MAAM,EAAE,CAAE,CACtCG,MAAM,CAAE,QACV,CAAC,CAAC,CACJ,CAEA;AACA,KAAM,CAAAO,aAAaA,CAACf,OAAa,CAAE,CACjC,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAC,eAAe,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC,CAC3D,MAAO,KAAI,CAACvB,OAAO,CAAC,eAAeqB,WAAW,CAAG,IAAIA,WAAW,EAAE,CAAG,EAAE,EAAE,CAAC,CAC5E,CAEA,KAAM,CAAAe,eAAeA,CAACC,aAAkB,CAAE,CACxC,MAAO,KAAI,CAACrC,OAAO,CAAC,cAAc,CAAE,CAClC4B,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACM,aAAa,CACpC,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAC,qBAAqBA,CAACC,WAAmB,CAAEN,OAAY,CAAE,CAC7D,MAAO,KAAI,CAACjC,OAAO,CAAC,gBAAgBuC,WAAW,EAAE,CAAE,CACjDX,MAAM,CAAE,KAAK,CACbC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACE,OAAO,CAC9B,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAO,eAAeA,CAACD,WAAmB,CAAE,CACzC,MAAO,KAAI,CAACvC,OAAO,CAAC,gBAAgBuC,WAAW,EAAE,CAAE,CACjDX,MAAM,CAAE,QACV,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAa,cAAcA,CAACrB,OAAa,CAAE,CAClC,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAC,eAAe,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC,CAC3D,MAAO,KAAI,CAACvB,OAAO,CAAC,4BAA4BqB,WAAW,CAAG,IAAIA,WAAW,EAAE,CAAG,EAAE,EAAE,CAAC,CACzF,CAEA;AACA,KAAM,CAAAqB,iBAAiBA,CAACC,IAAS,CAAE,CACjC,MAAO,KAAI,CAAC3C,OAAO,CAAC,8BAA8B,CAAE,CAClD4B,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACY,IAAI,CAC3B,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAC,gBAAgBA,CAACxB,OAAa,CAAE,CACpC,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAC,eAAe,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC,CAC3D,MAAO,KAAI,CAACvB,OAAO,CAAC,2BAA2BqB,WAAW,CAAG,IAAIA,WAAW,EAAE,CAAG,EAAE,EAAE,CAAC,CACxF,CAEA,KAAM,CAAAwB,WAAWA,CAACF,IAAS,CAAE,CAC3B,MAAO,KAAI,CAAC3C,OAAO,CAAC,wBAAwB,CAAE,CAC5C4B,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACY,IAAI,CAC3B,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAG,iBAAiBA,CAAA,CAAG,CACxB,MAAO,KAAI,CAAC9C,OAAO,CAAC,kBAAkB,CAAC,CACzC,CAEA;AACA,KAAM,CAAA+C,cAAcA,CAAC3B,OAAa,CAAE,CAClC,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAC,eAAe,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC,CAC3D,MAAO,KAAI,CAACvB,OAAO,CAAC,eAAeqB,WAAW,CAAG,IAAIA,WAAW,EAAE,CAAG,EAAE,EAAE,CAAC,CAC5E,CAEA,KAAM,CAAA2B,gBAAgBA,CAACC,cAAmB,CAAE,CAC1C,MAAO,KAAI,CAACjD,OAAO,CAAC,cAAc,CAAE,CAClC4B,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACkB,cAAc,CACrC,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAC,sBAAsBA,CAACC,YAAoB,CAAElB,OAAY,CAAE,CAC/D,MAAO,KAAI,CAACjC,OAAO,CAAC,gBAAgBmD,YAAY,EAAE,CAAE,CAClDvB,MAAM,CAAE,KAAK,CACbC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACE,OAAO,CAC9B,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAmB,kBAAkBA,CAAChC,OAAa,CAAE,CACtC,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAC,eAAe,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC,CAC3D,MAAO,KAAI,CAACvB,OAAO,CAAC,qBAAqBqB,WAAW,CAAG,IAAIA,WAAW,EAAE,CAAG,EAAE,EAAE,CAAC,CAClF,CACF,CAEA,MAAO,MAAM,CAAAgC,UAAU,CAAG,GAAI,CAAA1D,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}